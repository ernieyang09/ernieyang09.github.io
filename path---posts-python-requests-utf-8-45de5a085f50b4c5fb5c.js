webpackJsonp([0x7972a5ccc8df],{473:function(n,s){n.exports={data:{site:{siteMetadata:{title:"前端小誌",author:"Ernie Yang"}},markdownRemark:{id:"/Users/ernieyang09/Desktop/workspace/gatsby-blog/src/pages/posts/2019/03/0310--python-requests-utf8.md absPath of file >>> MarkdownRemark",html:'<snippet>\n  不知道多久沒有玩前端了，教練我想研究react hook啊...\n  現在我的前端實在是無用舞之地，來記錄一些工作上遇到的事情吧。\n  這邊要描述的是python requests(post) multipart/form-data的問題。\n</snippet>\n<p>公司需要大量轉移檔案，於是我們寫了一隻小程式去爬清單，然後將資料從一個網頁下載上傳至另一個網頁。</p>\n<p>一開始測試都很ok，直到我們遇到了一個使用日文名稱的檔案。</p>\n<p>在交叉測試之後，下載那邊是沒有問題的，我們使用linux，雖然在command line看到的檔名是亂碼，但是不影響實際上使用。</p>\n<p>上傳則是一直 http code 500，訊息也只有internal server error。</p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code class="language-python"><span class="token keyword">import</span> requests\nrequests<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">\'url\'</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> files<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">\'file\'</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">\'日文.zip\'</span><span class="token punctuation">,</span> ByteIO<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<p>我的直覺就是檔名的問題(公司有很多日文檔案，每次都被婊)，於是上網google了一下。</p>\n<p>看到了<a href="https://stackoverflow.com/questions/28282318/how-to-do-multi-part-upload-with-python-requests-library-and-unicode-filename/28283207">這篇</a></p>\n<p>然後點進去了他的blog看了一下</p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code class="language-python"><span class="token comment"># coding: utf8</span>\n<span class="token keyword">import</span> requests\n<span class="token keyword">import</span> re\n\n<span class="token keyword">def</span> <span class="token function">rewrite_request</span><span class="token punctuation">(</span>prepared_request<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    filename <span class="token operator">=</span> u<span class="token string">\'tête-à-tête.txt\'</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">\'utf-8\'</span><span class="token punctuation">)</span>\n    prepared_request<span class="token punctuation">.</span>body <span class="token operator">=</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span>b<span class="token string">\'filename\\*=.*\'</span><span class="token punctuation">,</span> b<span class="token string">\'filename=\'</span> <span class="token operator">+</span> filename<span class="token punctuation">,</span> prepared_request<span class="token punctuation">.</span>body<span class="token punctuation">)</span>\n    <span class="token keyword">return</span> prepared_request\n\nrequests<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">\'http://localhost/upload.php\'</span><span class="token punctuation">,</span> files<span class="token operator">=</span><span class="token punctuation">{</span>\n    <span class="token string">\'fieldname\'</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>u<span class="token string">\'tête-à-tête.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'some contents\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> auth<span class="token operator">=</span>rewrite_request<span class="token punctuation">)</span></code></pre>\n      </div>\n<p>我實際跑了一下，發現什麼都沒做的request.post，body的filename吃到utf-8檔名確實會自動消失，上傳沒有檔名的檔案當然會爆炸。</p>\n<p>不過blog的解法是一個醜醜的workaround，於是我研究了一下preparerequest自己寫了一個</p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code class="language-python"><span class="token keyword">import</span> requests\ns <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>\nprepped <span class="token operator">=</span> s<span class="token punctuation">.</span>prepare_request<span class="token punctuation">(</span>requests<span class="token punctuation">.</span>Request<span class="token punctuation">(</span><span class="token string">\'POST\'</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span>\n    headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> files<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">\'file\'</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">\'IWLLREPLACETHIS\'</span><span class="token punctuation">,</span>io<span class="token punctuation">.</span>BytesIO<span class="token punctuation">(</span>attachment_file<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\nprepped<span class="token punctuation">.</span>body <span class="token operator">=</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span>b<span class="token string">\'IWLLREPLACETHIS\'</span><span class="token punctuation">,</span> attachment_name<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">\'utf-8\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> prepped<span class="token punctuation">.</span>body<span class="token punctuation">)</span>\n\nprepped<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">\'content-length\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>prepped<span class="token punctuation">.</span>body<span class="token punctuation">)</span>\n\nsettings <span class="token operator">=</span> s<span class="token punctuation">.</span>merge_environment_settings<span class="token punctuation">(</span>prepped<span class="token punctuation">.</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>\nr <span class="token operator">=</span> s<span class="token punctuation">.</span>send<span class="token punctuation">(</span>prepped<span class="token punctuation">,</span> <span class="token operator">**</span><span class="token punctuation">{</span><span class="token operator">**</span>settings<span class="token punctuation">,</span> <span class="token string">\'timeout\'</span><span class="token punctuation">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<p>我先塞了一個簡易但不容易重複的字串在filename裡，然後直接取代字串。</p>\n<p>另外需要更新headers的content-length，replace body裡面的filename會改變整個body的size，像在我們的api上傳檔案會檢查content-length與body size是否一致，若是不修正一樣是跳internal server error。</p>\n<p>這個小問題卡了我1-2個小時檢查，2-3個小時測試+寫code，最後又卡1小時在content-length</p>\n<p>寫到這裡，一切都是requests裡的Urllib3的錯!!!!(python2的版本好像是好的)\n<br/>\n<br/>\n<br/>\n<br/></p>\n<p>來追根究底一下</p>\n<p>嗯....看了很久 看不太懂，我說說我的想法</p>\n<p>Urllib3的filename是吃rfc2231 spec的，長出來應該是這樣filename*=UTF-8\'\'name(但我記得我自己實測name是空的)</p>\n<p>但是html 5在multipart/form-data有自己的spec，不支援2231 spec，所以不管怎樣都沒用</p>\n<p>在github上已經討論了很久，也有人開了pr，不過urllib3不是只寫給html的，算是一個big change，所以一直沒有merge</p>\n<p>網路上如果google python 上傳 中文，應該是一堆文章，但不要跟那些文章一樣去改requests的source code啊</p>\n<p>太暴力了XDDDDD</p>',fields:{slug:"/posts/python-requests-utf8/"},frontmatter:{title:"python request post(上傳) utf-8問題",date:"2019-03-10T16:44",tags:["python"]}}},pathContext:{slug:"/posts/python-requests-utf8/"}}}});
//# sourceMappingURL=path---posts-python-requests-utf-8-45de5a085f50b4c5fb5c.js.map