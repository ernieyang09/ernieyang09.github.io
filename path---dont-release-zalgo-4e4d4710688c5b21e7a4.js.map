{"version":3,"sources":["webpack:///path---dont-release-zalgo-4e4d4710688c5b21e7a4.js","webpack:///./.cache/json/dont-release-zalgo.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/dont-release-zalgo.json","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","fields","slug","frontmatter","date","tags","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,4EACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,MACAC,cACAC,MAAA,OACAC,OAAA,eAGAC,gBACAC,GAAA,0IACAC,KAAA,slMACAC,QACAC,KAAA,wBAEAC,aACAP,MAAA,wBACAQ,KAAA,mBACAC,MACA,UACA,aACA,YAKAC,aACAJ,KAAA","file":"path---dont-release-zalgo-4e4d4710688c5b21e7a4.js","sourcesContent":["webpackJsonp([16616949994724432000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/dont-release-zalgo.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"site\": {\n\t\t\t\t\"siteMetadata\": {\n\t\t\t\t\t\"title\": \"前端小誌\",\n\t\t\t\t\t\"author\": \"Ernie Yang\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"id\": \"/Users/ernieyang09/Desktop/workspace/gatsby-blog/src/pages/posts/2017/08/0801--dont-release-zalgo.md absPath of file >>> MarkdownRemark\",\n\t\t\t\t\"html\": \"<p><snippet></snippet></p>\\n<p><a href=\\\"https://oren.github.io/blog/zalgo.html\\\">Don't release Zalgo!!!!!</a>\\n同場加映<a href=\\\"http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony\\\">Designing APIs for Asynchrony</a></p>\\n<p>最主要的一句話</p>\\n<blockquote>\\n<p>make sure your function always sync or always async.</p>\\n</blockquote>\\n<p>其實最近看書才知道這個詞，不過以前使用jQuery的時候就有設計過相似的概念。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">getData</span><span class=\\\"token punctuation\\\">(</span>url<span class=\\\"token punctuation\\\">,</span> model<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">var</span> df <span class=\\\"token operator\\\">=</span> $<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Deffered</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>model<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      df<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>model<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">async</span><span class=\\\"token operator\\\">...</span>\\n    <span class=\\\"token keyword\\\">return</span> df<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>當時的想法也很簡單，我寫了一個getData function有時候直接可以取得，有時候需要非同步很麻煩，乾脆直接包起來就好了，這樣出去以後可以統一.then()多方便，寫著寫著就成習慣了。</p>\\n<p>最近買了小黃書才知道原來這是個好寫法(寫得好)，當然其中還有很多原因，還包括了promise的一些特性，書裡面推崇的是es6的promise，jQuery版本的可能只有make sure your function always sync or always async這個概念。</p>\\n<p>等有空一點再來介紹。</p>\\n<p>PS.目前專案是與fetch寫在一起，但我總覺得哪裡還需要改進，譬如說不需要resolve(false)，而是由component connect state去判斷是否有成功，對於async await還有try catch的部分還不熟，之後要多爬文囉。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// redux with thunk</span>\\n<span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> url<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span>dispatch<span class=\\\"token punctuation\\\">,</span> getState<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'done'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">fetch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">doSomething</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//塞資料進入store</span>\\n        <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'done'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">catch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'error'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\",\n\t\t\t\t\"fields\": {\n\t\t\t\t\t\"slug\": \"/dont-release-zalgo/\"\n\t\t\t\t},\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Don't release Zalgo!!\",\n\t\t\t\t\t\"date\": \"2017-08-01T01:30\",\n\t\t\t\t\t\"tags\": [\n\t\t\t\t\t\t\"promise\",\n\t\t\t\t\t\t\"javascript\",\n\t\t\t\t\t\t\"async\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/dont-release-zalgo/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---dont-release-zalgo-4e4d4710688c5b21e7a4.js","module.exports = {\n\t\"data\": {\n\t\t\"site\": {\n\t\t\t\"siteMetadata\": {\n\t\t\t\t\"title\": \"前端小誌\",\n\t\t\t\t\"author\": \"Ernie Yang\"\n\t\t\t}\n\t\t},\n\t\t\"markdownRemark\": {\n\t\t\t\"id\": \"/Users/ernieyang09/Desktop/workspace/gatsby-blog/src/pages/posts/2017/08/0801--dont-release-zalgo.md absPath of file >>> MarkdownRemark\",\n\t\t\t\"html\": \"<p><snippet></snippet></p>\\n<p><a href=\\\"https://oren.github.io/blog/zalgo.html\\\">Don't release Zalgo!!!!!</a>\\n同場加映<a href=\\\"http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony\\\">Designing APIs for Asynchrony</a></p>\\n<p>最主要的一句話</p>\\n<blockquote>\\n<p>make sure your function always sync or always async.</p>\\n</blockquote>\\n<p>其實最近看書才知道這個詞，不過以前使用jQuery的時候就有設計過相似的概念。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">getData</span><span class=\\\"token punctuation\\\">(</span>url<span class=\\\"token punctuation\\\">,</span> model<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">var</span> df <span class=\\\"token operator\\\">=</span> $<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Deffered</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>model<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      df<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>model<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">async</span><span class=\\\"token operator\\\">...</span>\\n    <span class=\\\"token keyword\\\">return</span> df<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>當時的想法也很簡單，我寫了一個getData function有時候直接可以取得，有時候需要非同步很麻煩，乾脆直接包起來就好了，這樣出去以後可以統一.then()多方便，寫著寫著就成習慣了。</p>\\n<p>最近買了小黃書才知道原來這是個好寫法(寫得好)，當然其中還有很多原因，還包括了promise的一些特性，書裡面推崇的是es6的promise，jQuery版本的可能只有make sure your function always sync or always async這個概念。</p>\\n<p>等有空一點再來介紹。</p>\\n<p>PS.目前專案是與fetch寫在一起，但我總覺得哪裡還需要改進，譬如說不需要resolve(false)，而是由component connect state去判斷是否有成功，對於async await還有try catch的部分還不熟，之後要多爬文囉。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// redux with thunk</span>\\n<span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> url<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span>dispatch<span class=\\\"token punctuation\\\">,</span> getState<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'done'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">fetch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">doSomething</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//塞資料進入store</span>\\n        <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'done'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">catch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'error'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\",\n\t\t\t\"fields\": {\n\t\t\t\t\"slug\": \"/dont-release-zalgo/\"\n\t\t\t},\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Don't release Zalgo!!\",\n\t\t\t\t\"date\": \"2017-08-01T01:30\",\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"promise\",\n\t\t\t\t\t\"javascript\",\n\t\t\t\t\t\"async\"\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/dont-release-zalgo/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/dont-release-zalgo.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/dont-release-zalgo.json\n// module chunks = 16616949994724432000"],"sourceRoot":""}